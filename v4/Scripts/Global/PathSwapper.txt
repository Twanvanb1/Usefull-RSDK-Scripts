// ----------------------------------
// RSDK Project:  General RSDKv4 Objects
// Script Description: Path Swapper Object
// Script Author: Twanvanb1
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.extendTop
private alias object.value1 : object.extendBottom
private alias object.value2 : object.planeRD
private alias object.value3 : object.planeLU
private alias object.value4 : object.drawOrderRD
private alias object.value5 : object.drawOrderLU
private alias object.value6 : object.onGround

// Player Aliases
private alias object.type : player.type
private alias object.xvel : player.xvel
private alias object.yvel : player.yvel
private alias object.gravity : player.gravity
private alias object.collisionPlane : player.collisionPlane
private alias object.value18 :	player.sortedDrawOrder


// ========================
// Events
// ========================

event ObjectUpdate
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		CheckEqual(object.onGround, false)
		temp0 = checkResult
		CheckEqual(player[currentPlayer].gravity, GRAVITY_GROUND)
		temp0 |= checkResult
		if temp0 == true
			GetBit(temp1, object.propertyValue, 6)
			if temp1 == false
				BoxCollisionTest(C_TOUCH, object.entityPos, -12, object.extendTop, 12, object.extendBottom, currentPlayer, 0, 0, 0, 0)
				if checkResult == true
					if player[currentPlayer].xvel > 0
						if object.direction == FLIP_NONE
							player[currentPlayer].collisionPlane = object.planeLU
						end if

						player[currentPlayer].sortedDrawOrder = object.drawOrderLU
					else
						if object.direction == FLIP_NONE
							player[currentPlayer].collisionPlane = object.planeRD
						end if
						player[currentPlayer].sortedDrawOrder = object.drawOrderRD
					end if
				end if
			else
				BoxCollisionTest(C_TOUCH, object.entityPos, object.extendTop, -12, object.extendBottom, 12, currentPlayer, 0, 0, 0, 0)
				if checkResult == true
					if player[currentPlayer].yvel > 0
						if object.direction == FLIP_NONE
							player[currentPlayer].collisionPlane = object.planeLU
						end if
						player[currentPlayer].sortedDrawOrder = object.drawOrderLU
					else
						if object.direction == FLIP_NONE
							player[currentPlayer].collisionPlane = object.planeRD
						end if
						player[currentPlayer].sortedDrawOrder = object.drawOrderRD
					end if
				end if
			end if
		end if
	next
end event

event ObjectDraw
	if player[0].type == TypeName[Debug Mode]
		temp1 = object.propertyValue
		temp1 &= 3
		temp1 += 2
		temp0 = 1
		temp0 <<= temp1
		temp1 = temp0
		temp0 <<= 19
		FlipSign(temp0)

		GetBit(temp2, object.propertyValue, 7)
		temp3 = object.propertyValue
		temp3 >>= 2
		temp3 &= 15

		if object.direction == FLIP_X
			temp3 >>= 2
			temp3 += 16
		end if

		GetBit(temp4, object.propertyValue, 6)
		if temp4 == true
			temp0 += object.xpos
			temp0 += 0x80000

			temp4 = 0
			while temp4 < temp1
				if temp2 == true
					DrawSpriteXY(20, temp0, object.ypos)
				end if
				DrawSpriteXY(temp3, temp0, object.ypos)
				temp0 += 0x100000
				temp4++
			loop

			if temp1 == 0
				DrawSprite(temp3)
			end if
		else
			temp0 += object.ypos
			temp0 += 0x80000

			temp4 = 0
			while temp4 < temp1
				if temp2 == true
					DrawSpriteXY(20, object.xpos, temp0)
				end if
				DrawSpriteXY(temp3, object.xpos, temp0)
				temp0 += 0x100000
				temp4++
			loop

			if temp1 == 0
				DrawSprite(temp3)
			end if
		end if
	end if
end event

event ObjectStartup
	LoadSpriteSheet("Global/Editor.gif")

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 65)
		temp0++
		temp1 += 17
	loop
	
	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 82)
		temp0++
		temp1 += 17
	loop

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 99)
		temp0++
		temp1 += 17
	loop

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 116)
		temp0++
		temp1 += 17
	loop

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 133)
		temp0++
		temp1 += 17
	loop

	SpriteFrame(-8, -8, 16, 16, 103, 65) // #20 - back

	foreach (TypeName[Path Swapper], arrayPos0, ALL_ENTITIES)
		temp0 = object[arrayPos0].propertyValue
		temp0 &= 3
		temp0 += 2
		object[arrayPos0].extendTop = 1
		object[arrayPos0].extendTop <<= temp0
		object[arrayPos0].extendTop <<= 3
		object[arrayPos0].extendBottom = object[arrayPos0].extendTop
		FlipSign(object[arrayPos0].extendTop)

		GetBit(object[arrayPos0].planeRD, object[arrayPos0].propertyValue, 2)
		GetBit(object[arrayPos0].planeLU, object[arrayPos0].propertyValue, 3)

		GetBit(object[arrayPos0].drawOrderRD, object[arrayPos0].propertyValue, 4)
		object[arrayPos0].drawOrderRD += 4
		GetBit(object[arrayPos0].drawOrderLU, object[arrayPos0].propertyValue, 5)
		object[arrayPos0].drawOrderLU += 4

		GetBit(object[arrayPos0].onGround, object[arrayPos0].propertyValue, 7)
	next
end event

// ========================
// Editor Events & Aliases
// ========================

private alias 0 : VAR_ID_SIZE
private alias 1 : VAR_ID_PLANEL
private alias 2 : VAR_ID_PLANER
private alias 3 : VAR_ID_DRAWL
private alias 4 : VAR_ID_DRAWR
private alias 5 : VAR_ID_SUBTYPE
private alias 6 : VAR_ID_ONGROUND
private alias 7 : VAR_ID_ONLYDRAWORDER


event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break
			
		case VAR_ID_SIZE // size
			checkResult = object.propertyValue
			checkResult &= 3
			break
			
		case VAR_ID_PLANEL // collisionPlaneL
			GetBit(checkResult, object.propertyValue, 2)
			break
			
		case VAR_ID_PLANER // collisionPlaneR
			GetBit(checkResult, object.propertyValue, 3)
			break
			
		case VAR_ID_DRAWL // drawOrderL
			GetBit(checkResult, object.propertyValue, 4)
			break
			
		case VAR_ID_DRAWR // drawOrderR
			GetBit(checkResult, object.propertyValue, 5)
			break
			
		case VAR_ID_SUBTYPE // subType
			GetBit(checkResult, object.propertyValue, 6)
			break
			
		case VAR_ID_ONGROUND // onGround
			GetBit(checkResult, object.propertyValue, 7)
			break

		case VAR_ID_ONLYDRAWORDER
			checkResult = object.direction
			break
			
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break
			
		case VAR_ID_SIZE // size
			temp1 = 3
			Not(temp1)
			object.propertyValue &= temp1

			temp0 = editor.variableValue
			temp0 &= 3
			object.propertyValue |= temp0
			break
			
		case VAR_ID_PLANEL // collisionPlaneL
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 2, checkResult)
			break
			
		case VAR_ID_PLANER // collisionPlaneR
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 3, checkResult)
			break
			
		case VAR_ID_DRAWL // drawOrderL
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 4, checkResult)
			break
			
		case VAR_ID_DRAWR // drawOrderR
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 5, checkResult)
			break
			
		case VAR_ID_SUBTYPE // subType
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 6, checkResult)
			break
			
		case VAR_ID_ONGROUND // onGround
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 7, checkResult)
			break

		case VAR_ID_ONLYDRAWORDER // size
			object.direction = editor.variableValue
			break	
		end switch
	end if
end event


event RSDKDraw
	// size
	temp1 = object.propertyValue
	temp1 &= 3
	temp1 += 2
	temp0 = 1
	temp0 <<= temp1
	temp1 = temp0
	temp0 <<= 19
	FlipSign(temp0)

	GetBit(temp2, object.propertyValue, 7)
	temp3 = object.propertyValue
	temp3 >>= 2
	temp3 &= 15

	if object.direction == FLIP_X
		temp3 >>= 2
		temp3 += 16
	end if

	GetBit(temp4, object.propertyValue, 6)
	if temp4 == true
		temp0 += object.xpos
		temp0 += 0x80000

		temp4 = 0
		while temp4 < temp1
			if temp2 == true
				DrawSpriteXY(20, temp0, object.ypos)
			end if
			DrawSpriteXY(temp3, temp0, object.ypos)
			temp0 += 0x100000
			temp4++
		loop

		if temp1 == 0
			DrawSprite(temp3)
		end if
	else
		temp0 += object.ypos
		temp0 += 0x80000

		temp4 = 0
		while temp4 < temp1
			if temp2 == true
				DrawSpriteXY(20, object.xpos, temp0)
			end if
			DrawSpriteXY(temp3, object.xpos, temp0)
			temp0 += 0x100000
			temp4++
		loop

		if temp1 == 0
			DrawSprite(temp3)
		end if
	end if
end event


event RSDKLoad
	LoadSpriteSheet("Global/Editor.gif")

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 65)
		temp0++
		temp1 += 17
	loop
	
	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 82)
		temp0++
		temp1 += 17
	loop

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 99)
		temp0++
		temp1 += 17
	loop

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 116)
		temp0++
		temp1 += 17
	loop

	temp0 = 0
	temp1 = 35
	while temp0 < 4
		SpriteFrame(-8, -8, 16, 16, temp1, 133)
		temp0++
		temp1 += 17
	loop

	SpriteFrame(-8, -8, 16, 16, 103, 65) // #20 - back

	SpriteFrame(-8, -8, 16, 16, 42, 164) // #16 - LL
	SpriteFrame(-8, -8, 16, 16, 59, 164) // #17 - LH
	SpriteFrame(-8, -8, 16, 16, 76, 164) // #18 - HL
	SpriteFrame(-8, -8, 16, 16, 93, 164) // #19 - HH
	
	SpriteFrame(-8, -8, 16, 16, 93, 113) // #20 - back

	AddEditorVariable("size")
	SetActiveVariable("size")
	AddEnumVariable("4 Nodes", 0)
	AddEnumVariable("8 Nodes", 1)
	AddEnumVariable("16 Nodes", 2)
	AddEnumVariable("32 Nodes", 3)

	AddEditorVariable("collisionPlaneL")
	SetActiveVariable("collisionPlaneL")
	AddEnumVariable("Plane A", 0)
	AddEnumVariable("Plane B", 1)

	AddEditorVariable("collisionPlaneR")
	SetActiveVariable("collisionPlaneR")
	AddEnumVariable("Plane A", 0)
	AddEnumVariable("Plane B", 1)

	AddEditorVariable("drawOrderL")
	SetActiveVariable("drawOrderL")
	AddEnumVariable("Low Layer", 0)
	AddEnumVariable("High Layer", 1)

	AddEditorVariable("drawOrderR")
	SetActiveVariable("drawOrderR")
	AddEnumVariable("Low Layer", 0)
	AddEnumVariable("High Layer", 1)

	AddEditorVariable("subType")
	SetActiveVariable("subType")
	AddEnumVariable("vertical", false)
	AddEnumVariable("horizontal", true)

	AddEditorVariable("onGround")
	SetActiveVariable("onGround")
	AddEnumVariable("false", false)
	AddEnumVariable("true", true)

	AddEditorVariable("onlyDrawOrder")
	SetActiveVariable("onlyDrawOrder")
	AddEnumVariable("false", false)
	AddEnumVariable("true", true)
end event
