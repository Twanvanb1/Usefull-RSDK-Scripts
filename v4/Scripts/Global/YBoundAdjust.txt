// ----------------------------------
// RSDK Project: General RSDK Objects
// Script Description: Y Bound Adjust Object
// Script Author: Twanvanb1
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.leftBoundary
private alias object.value1 : object.rightBoundary
private alias object.value2 : object.size

// Types
public alias 0 : BOUNDSMARKER_ANY_Y
public alias 1 : BOUNDSMARKER_ABOVE_Y
public alias 2 : BOUNDSMARKER_BELOW_Y
public alias 3 : BOUNDSMARKER_BELOW_Y_ANY

// Player Aliases
private alias object.type : player.type
private alias object.xpos : player.xpos
private alias object.ypos : player.ypos

reserve function YBoundAdjust_LeftBound
reserve function YBoundAdjust_RightBound

private function YBoundAdjust_LeftBound
	if object.leftBoundary > 0
		stage.newXBoundary1 = object.xpos
		stage.newXBoundary1 >>= 16
		stage.newXBoundary1 -= object.leftBoundary
		object.leftBoundary = 0
	end if
end function

private function YBoundAdjust_RightBound
	if object.rightBoundary > 0
		stage.newXBoundary2 = object.xpos
		stage.newXBoundary2 >>= 16
		stage.newXBoundary2 += object.rightBoundary
		object.rightBoundary = 0
	end if
end function

// ========================
// Events
// ========================

event ObjectUpdate
	switch object.propertyValue
	case BOUNDSMARKER_ANY_Y // Adjust the bottom boundary to the object's ypos, regardless of their position
		temp0 = player[0].xpos
		temp0 -= object.xpos
		Abs(temp0)
		if temp0 < 0x200000
			stage.newYBoundary2 = object.iypos
			stage.deathBoundary = object.ypos
			CallFunction(YBoundAdjust_LeftBound)
			CallFunction(YBoundAdjust_RightBound)
		end if
		break
		
	case BOUNDSMARKER_ABOVE_Y // Only adjust if the Player is higher than the object's ypos
		if player[0].ypos < object.ypos
			temp0 = player[0].xpos
			temp0 -= object.xpos
			Abs(temp0)
			if temp0 < 0x200000
				stage.newYBoundary2 = object.iypos
				stage.deathBoundary = object.ypos
				CallFunction(YBoundAdjust_LeftBound)
				CallFunction(YBoundAdjust_RightBound)
			end if
		end if
		break

	case BOUNDSMARKER_BELOW_Y // Only adjust if the Player is lower than the object.ypos
		if player[0].ypos > object.ypos
			temp0 = player[0].xpos
			temp0 -= object.xpos
			Abs(temp0)
			if temp0 < 0x200000
				stage.newYBoundary1 = object.iypos
				CallFunction(YBoundAdjust_LeftBound)
				CallFunction(YBoundAdjust_RightBound)
			end if
		end if
		break
		
	case BOUNDSMARKER_BELOW_Y_ANY
		// The name on this one is a bit confusing imo
		// -> But basically, adjust the top boundary, regardless of the Player's ypos
		// -->These names where taken from mania's decomp
		temp0 = player[0].xpos
		temp0 -= object.xpos
		Abs(temp0)
		if temp0 < 0x200000
			stage.newYBoundary1 = object.iypos
			CallFunction(YBoundAdjust_LeftBound)
			CallFunction(YBoundAdjust_RightBound)
		end if
		break
	end switch
end event


event ObjectDraw
	if player[0].type == TypeName[Debug Mode] // Show the thing! In Debug, of course!!
		DrawSprite(0)
	end if
end event


event ObjectStartup
	LoadSpriteSheet("Global/Editor.gif")
	SpriteFrame(-16, -8, 32, 16, 32, 8) // #0 - "B" (ounds Marker)

	arrayPos1 = stage.playerListPos
	if stage.playerListPos > PlayerName[KNUCKLES]
		arrayPos1 = 0
	end if

	foreach (TypeName[Y Bound Adjust], arrayPos0, ALL_ENTITIES)
		if options.vsMode == false
			// Player-Specific bounds
			temp1 = object[arrayPos0].propertyValue
			temp1 &= 0xF0
			temp1 >>= 4
			if temp1 != 0
				temp1 >>= 1
				GetBit(temp0, temp1, arrayPos1)
				if temp0 == false
					object[arrayPos0].type = TypeName[Blank Object]
				end if
			end if

			object[arrayPos0].priority = PRIORITY_XBOUNDS

			temp0 = object[arrayPos0].propertyValue
			temp0 &= 0xF
			switch temp0
			case BOUNDSMARKER_ANY_Y 
				temp0 = player[0].xpos
				temp0 -= object[arrayPos0].xpos
				Abs(temp0)
				if temp0 < 0x200000
					stage.curYBoundary2 = object[arrayPos0].iypos
					stage.deathBoundary = object[arrayPos0].ypos
				end if
				break
				
			case BOUNDSMARKER_ABOVE_Y
				if player[0].ypos < object[arrayPos0].ypos
					temp0 = player[0].xpos
					temp0 -= object[arrayPos0].xpos
					Abs(temp0)
					if temp0 < 0x200000
						stage.newYBoundary2 = object[arrayPos0].iypos
						stage.deathBoundary = object[arrayPos0].ypos
					end if
				end if
				break

			case BOUNDSMARKER_BELOW_Y
				if player[0].ypos > object[arrayPos0].ypos
					temp0 = player[0].xpos
					temp0 -= object[arrayPos0].xpos
					Abs(temp0)
					if temp0 < 0x200000
						stage.curYBoundary1 = object[arrayPos0].iypos
					end if
				end if
				break

			case BOUNDSMARKER_BELOW_Y_ANY
				temp0 = player[0].xpos
				temp0 -= object[arrayPos0].xpos
				Abs(temp0)
				if temp0 < 0x200000
					stage.newYBoundary1 = object[arrayPos0].iypos
				end if
				break
			end switch
		else
			object[arrayPos0].type = TypeName[Blank Object]
		end if
	next
end event


// ========================
// Editor Events
// ========================

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break

		case 0 // type
			checkResult = object.propertyValue
			checkResult &= 0xF
			break

		case 1 // activeSonic
			GetBit(checkResult, object.propertyValue, 4)
			break

		case 2 // activeTails
			GetBit(checkResult, object.propertyValue, 5)
			break

		case 3 // activeKnux
			GetBit(checkResult, object.propertyValue, 6)
			break

		case 4 // leftBoundary
			checkResult = object.leftBoundary
			break

		case 5 // rightBoundary
			checkResult = object.rightBoundary
			break

		case 6 // size
			checkResult = object.size
			break
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break

		case 0 // type
			temp0 = editor.variableValue
			temp0 &= 0xF
			object.propertyValue &= 0xF0
			object.propertyValue |= temp0
			break

		case 1 // activeSonic
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 4, checkResult)
			break
			
		case 2 // activeTails
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 5, checkResult)
			break

		case 3 // activeKnux
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 6, checkResult)
			break

		case 4 // leftBoundary
			object.leftBoundary = editor.variableValue
			break

		case 5 // rightBoundary
			object.rightBoundary = editor.variableValue
			break

		case 6 // size
			object.size = editor.variableValue
			break

		end switch
	end if
end event

private alias object.value30 : object.drawPos.x
private alias object.value40 : object.drawPos.y

event RSDKDraw
	if editor.showGizmos == true
		temp0 = object.ixpos
		temp0 -= object.leftBoundary
		temp0 *= 0x1 0000

		temp1 = object.ixpos
		temp1 += object.rightBoundary
		temp1 *= 0x1 0000

		DrawLine(temp0, object.ypos, temp1, object.ypos, 0xFF, 0xFF, 0x00) // No specific reason for using yellow, I just think it looks nice
		if object.leftBoundary > 0
			temp0 = object.ypos
			temp0 -= 0x18 0000		
				
			object.drawPos.x = object.ixpos
			object.drawPos.x -= object.leftBoundary
			object.drawPos.x *= 0x1 0000
			DrawLine(object.drawPos.x, object.ypos, object.drawPos.x, temp0, 0xFF, 0xFF, 0x00) // No specific reason for using yellow, I just think it looks nice
		end if

		if object.rightBoundary > 0
			temp0 = object.ypos
			temp0 -= 0x18 0000			

			object.drawPos.x = object.ixpos
			object.drawPos.x += object.rightBoundary
			object.drawPos.x *= 0x1 0000
			DrawLine(object.drawPos.x, object.ypos, object.drawPos.x, temp0, 0xFF, 0xFF, 0x00) 
		end if
	end if

	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Editor.gif")
	SpriteFrame(-16, -8, 32, 16, 32, 8) // #0 - "B" (ounds Marker)
	
	AddEditorVariable("type")
	SetActiveVariable("type")
	AddEnumVariable("Any Y", BOUNDSMARKER_ANY_Y)
	AddEnumVariable("Above Y", BOUNDSMARKER_ABOVE_Y)
	AddEnumVariable("Below Y", BOUNDSMARKER_BELOW_Y)
	AddEnumVariable("Below Y Any", BOUNDSMARKER_BELOW_Y_ANY)
	
	AddEditorVariable("activeSonic")
	SetActiveVariable("activeSonic")
	AddEnumVariable("false", false)
	AddEnumVariable("true", true)
	
	AddEditorVariable("activeTails")
	SetActiveVariable("activeTails")
	AddEnumVariable("false", false)
	AddEnumVariable("true", true)
	
	AddEditorVariable("activeKnux")
	SetActiveVariable("activeKnux")
	AddEnumVariable("false", false)
	AddEnumVariable("true", true)

	AddEditorVariable("leftBoundary")
	SetActiveVariable("leftBoundary")

	AddEditorVariable("rightBoundary")
	SetActiveVariable("rightBoundary")

	AddEditorVariable("size")
	SetActiveVariable("size")

	SetVariableAlias(ALIAS_VAR_VAL0, "leftBoundary")
	SetVariableAlias(ALIAS_VAR_VAL1, "rightBoundary")
	SetVariableAlias(ALIAS_VAR_VAL2, "size")
end event
